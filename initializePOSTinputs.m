function [ POSTinputs ] = initializePOSTinputs( algorithm )


if eq(nargin,0)
    algorithm = 'FWGS';
end

regE = '#';
% -- variables --
POSTinputs = struct(...
        'FEATURE_ATTRIBUTE_NAME', [],...
        'DATASET_URI',  [],...
        'DATASET_ID',   [],...
        'TIME_START',   [],...
        'TIME_END',     [],...
        'REQUIRE_FULL_COVERAGE','true',...
        'DELIMITER',    'COMMA',...
        'STATISTICS',   'MEAN',...
        'GROUP_BY',     'STATISTIC',...
        'SUMMARIZE_TIMESTEP', 'false',...
        'SUMMARIZE_FEATURE_ATTRIBUTE', 'false');

    
removeFields = struct(...
    'FWGS',     {''},...
    'FCOD',     {['FEATURE_ATTRIBUTE_NAME' regE...
        'SUMMARIZE_FEATURE_ATTRIBUTE' regE...
        'SUMMARIZE_TIMESTEP' regE...
        'GROUP_BY' regE...
        'STATISTICS' regE...
        'DELIMITER' regE]},...
    'FCI',      {['FEATURE_ATTRIBUTE_NAME' regE...
        'TIME_START' regE...
        'TIME_END' regE...
        'SUMMARIZE_FEATURE_ATTRIBUTE' regE...
        'SUMMARIZE_TIMESTEP' regE...
        'GROUP_BY' regE...
        'STATISTICS' regE...
        'DELIMITER' regE]},...
    'FCGC',     {['SUMMARIZE_FEATURE_ATTRIBUTE' regE...
        'TIME_START' regE...
        'TIME_END' regE...
        'SUMMARIZE_TIMESTEP' regE...
        'GROUP_BY' regE...
        'STATISTICS' regE]});



rmvFN = removeFields.(algorithm);

splitIdx = regexp(rmvFN,regE);

for i = 1:length(splitIdx)
    if eq(i,1)
        POSTinputs = rmfield(POSTinputs,rmvFN(1:splitIdx(i)-1));
    else
        POSTinputs = rmfield(POSTinputs,rmvFN(splitIdx(i-1)+1:splitIdx(i)-1));
    end
    
end

